---
interface CallToAction {
  label: string;
  href: string;
}

interface Props {
  eyebrow?: string;
  title: string;
  description?: string;
  primaryCta: CallToAction;
  secondaryCta?: CallToAction;
}

const { eyebrow, title, description, primaryCta, secondaryCta } =
  Astro.props as Props;
---
<section class="cta">
  <div class="section-container content">
    <div>
      {eyebrow && <span class="eyebrow">{eyebrow}</span>}
      <h2>{title}</h2>
      {description && <p>{description}</p>}
    </div>
    <div class="button-group">
      <a class="button primary" href={primaryCta.href}>{primaryCta.label}</a>
      {secondaryCta && (
        <a class="button secondary" href={secondaryCta.href}>
          {secondaryCta.label}
        </a>
      )}
    </div>
  </div>
</section>

<style>
  .cta {
    padding: 0 0 4rem;
  }

  .content {
    background: linear-gradient(135deg, #3b5bfd, #1f2fe0);
    color: #fff;
    border-radius: 1.75rem;
    padding: clamp(3rem, 6vw, 4.5rem);
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    box-shadow: 0 18px 45px -22px rgba(59, 91, 253, 0.75);
  }

  .content p {
    color: rgba(255, 255, 255, 0.82);
    margin: 1rem 0 0;
    max-width: 520px;
  }

  .eyebrow {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    font-weight: 600;
    font-size: 0.85rem;
    letter-spacing: 0.08em;
    text-transform: uppercase;
  }

  @media (min-width: 860px) {
    .content {
      flex-direction: row;
      align-items: center;
      justify-content: space-between;
    }
  }
</style>
