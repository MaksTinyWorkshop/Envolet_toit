---
import CtaButton from "./CTA/CtaButton.astro";
import Spacer from "./UI/Spacer.astro";

interface CallToAction {
  label: string;
  href: string;
}

interface Props {
  eyebrow?: string;
  title: string;
  description?: string;
  content?: string;
  primaryCta: CallToAction;
  secondaryCta?: CallToAction;
}

const baseHref = import.meta.env.BASE_URL;
const withTrailingSlash = (value) =>
  value.endsWith("/") ? value : `${value}/`;
const baseWithSlash = withTrailingSlash(baseHref);
const isExternal = (path) => /^(?:[a-z+]+:)?\/\//i.test(path);
const resolveHref = (path) => {
  if (!path || path === "") {
    return baseWithSlash;
  }
  if (isExternal(path) || path.startsWith("#")) {
    return path;
  }
  if (path === "/") {
    return baseWithSlash;
  }
  const normalized = path.startsWith("/") ? path.slice(1) : path;
  return `${baseWithSlash}${normalized}`;
};

const { eyebrow, title, description, content, primaryCta, secondaryCta } =
  Astro.props as Props;
const primaryLabel = primaryCta?.label ?? "ÊTRE RAPPELÉ";
const resolvedSecondary = secondaryCta
  ? { ...secondaryCta, href: resolveHref(secondaryCta.href) }
  : undefined;
---

<section class="section-container">
  <div class="content">
    <div class="cta">
      {eyebrow && <span class="eyebrow">{eyebrow}</span>}
      <h2>{title}</h2>
      {description && <p set:html={description} />}
      {content && <p class="bold" set:html={content} />}
    </div>
    <CtaButton label={primaryLabel} />
    {resolvedSecondary && (
      <a class="secondary-link" href={resolvedSecondary.href}>
        {resolvedSecondary.label}
      </a>
    )}
    <Spacer size=".5rem" />
  </div>
</section>

<style lang="scss">
  .content {
    background: var(--color-primary);
    color: var(--color-background);
    padding: var(--space-4);
    display: flex;
    flex-direction: column;
    gap: var(--space-3);
    box-shadow: var(--shadow-lg);

    .cta {
      max-width: 700px;
      margin: 0 auto;
      display: flex;
      flex-direction: column;
      align-items: center;

      h2 {
        font-size: var(--step-1);
        line-height: 1.3;
        margin-bottom: 0.5rem;
        font-weight: 700;
        text-align: center;
      }
      p {
        color: var(--color-background);
        font-size: var(--step--1);
        text-align: center;
        margin: var(--space-2) 0 0;
        line-height: 1.2;
        white-space: pre-line;

        &.bold {
          font-weight: 600;
        }
      }
    }
  }

  .eyebrow {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    font-weight: 600;
    font-size: var(--step--1);
    letter-spacing: 0.08em;
    text-transform: uppercase;
  }

  .secondary-link {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-1);
    color: var(--color-background);
    font-size: var(--step--1);
    text-decoration: none;
    transition: text-decoration 0.2s ease;

    &:hover {
      text-decoration: underline;
    }
  }
</style>
