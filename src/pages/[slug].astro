---
import BaseLayout from "@layouts/BaseLayout.astro";
import { getCollection, getEntry } from "astro:content";
import { resolveSection } from "@lib/sectionRenderer";
import type { CollectionEntry } from "astro:content";

export async function getStaticPaths() {
  const pages = await getCollection("pages", ({ data }) => !data.draft);
  return pages
    .filter((page) => page.slug !== "home")
    .map((page) => ({
      params: { slug: page.slug },
      props: { page },
    }));
}

interface Props {
  page: CollectionEntry<"pages">;
}

const { page } = Astro.props as Props;

const sections = await Promise.all(
  page.data.sections.map(async ({ slug }) => await getEntry("sections", slug))
);

const resolvedSections = await Promise.all(
  (sections as CollectionEntry<'sections'>[]).map((section) =>
    resolveSection(section)
  )
);
---

<BaseLayout title={page.data.title} description={page.data.description}>
  {resolvedSections.map(({ Component, props }) => <Component {...props} />)}
</BaseLayout>
